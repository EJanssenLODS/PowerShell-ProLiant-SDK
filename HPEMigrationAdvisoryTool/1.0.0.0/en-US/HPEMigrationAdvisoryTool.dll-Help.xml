<?xml version="1.0" encoding="utf-8"?>
<helpItems xmlns="http://msh" schema="maml">
	<!--Edited with: SAPIEN PowerShell HelpWriter 2017 v2.1.34-->
	<!--Generated by: SAPIEN PowerShell HelpWriter 2017 v2.1.34-->
	<!--
		Module: 		HPEMigrationAdvisoryTool
		Version:		1.0.0.0
	-->
	<!--All Commands-->
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--TAG: HASCOMMONPARAMETERS-->
		<!--Command-->
		<command:details>
			<command:name>Invoke-HPECmdletMigration</command:name>
			<maml:description>
				<maml:para>Provides migration suggestion for HPE Cmdlets.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>
			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>HPECmdletMigration</command:noun>
			<dev:version />
		</command:details>
		<maml:description>
			<maml:para>Provides suggestion for HPE Cmdlets used in the script file. Migration suggestions are provided for the existing script to update to the latest available HPE cmdlets modules.</maml:para>
			<maml:para>This Cmdlet provide migration suggestion for the following items
1) Cmdlet module name 
2) Cmdlet
3) Parameter
4) Property
5) Value</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem parametersetname="__AllParameterSets">
				<!--NAME: __AllParameterSets-->
				<maml:name>Invoke-HPECmdletMigration</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>ScriptFile</maml:name>
					<maml:description>
						<maml:para>Specify the valid powerShell script file path. It accepts only .psm1 and .ps1 file.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:type>
						<maml:name>String</maml:name>
						<maml:uri />
					</dev:type>
					<dev:defaultValue>None</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>CmdletModule</maml:name>
					<maml:description>
						<maml:para>Specify the base Cmdlet module. Cmdlets used in the input script file should be from these specified module(s).</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
					<dev:type>
						<maml:name>String[]</maml:name>
						<maml:uri />
					</dev:type>
					<dev:defaultValue>None</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>ExportToCSV</maml:name>
					<maml:description>
						<maml:para>This parameter is used to export the migration suggestions into CSV. This parameter accepts directory path. CSV file has "Migration_" prefix with the input script file name.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:type>
						<maml:name>String</maml:name>
						<maml:uri />
					</dev:type>
					<dev:defaultValue>none</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ScriptFile</maml:name>
				<maml:description>
					<maml:para>Specify the valid powerShell script file path. It accepts only .psm1 and .ps1 file.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri />
				</dev:type>
				<dev:defaultValue>None</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CmdletModule</maml:name>
				<maml:description>
					<maml:para>Specify the base Cmdlet module. Cmdlets used in the input script file should be from these specified module(s).</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri />
				</dev:type>
				<dev:defaultValue>None</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ExportToCSV</maml:name>
				<maml:description>
					<maml:para>This parameter is used to export the migration suggestions into CSV. This parameter accepts directory path. CSV file has "Migration_" prefix with the input script file name.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri />
				</dev:type>
				<dev:defaultValue>none</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para />
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>CmdletChangeItem[]</maml:name>
					<maml:uri></maml:uri>
				</dev:type>
				<maml:description>
					<maml:para />
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>1) This Cmdlet provides suggestion based on Cmdlets recognised as PowerShell cmdlet token. If the Cmdlet is passed as string and invoke through Invoke-Command     then no suggestion will provided for such Cmdlets.</maml:para>
			</maml:alert>
			<maml:alert>
				<maml:para>2) If the change type is "Classify" in that case ParameterReference/PropertyRefrence will be null. Update the script with new Cmdlet and Parameter/Property (if availiable).</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>EXAMPLE 1</maml:title>
				<maml:introduction>
					<maml:para />
				</maml:introduction>
				<dev:code>C:\PS&gt; $returnObj = Invoke-HPECmdletMigration -ScriptFile C:\TestScript.ps1 -CmdletModule HPBIOSCmdlets
C:\PS&gt; $returnObj[0]


ChangeType         : Rename
LineNumber         : 3
LinePosition       : 1
Severity           : High
Cmdlet             : Existing : Set-HPBIOSBootMode; New : Set-HPEBIOSBootMode
Parameter          : 
ParameterReference : 
Property           : 
PropertyReference  : 
Value              : {UEFI_Mode}
ValueReference     : {UEFI_Mode}</dev:code>
				<dev:remarks>
					<maml:para>Above example return list of suggested items. Each item in the list has above mentioned properties.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>EXAMPLE 2</maml:title>
				<maml:introduction>
					<maml:para />
				</maml:introduction>
				<dev:code>C:\PS&gt; $returnObject = Invoke-HPECmdletMigration -ScriptFile C:\CaseSens.ps1 -CmdletModule HPBIOSCmdlets

C:\PS&gt; $returnObject 


ChangeType         : Rename
LineNumber         : 1
LinePosition       : 9
Severity           : High
Cmdlet             : Existing : Connect-HPBIOS; New : Connect-HPEBIOS
Parameter          : 
ParameterReference : 
Property           : 
PropertyReference  : 
Value              : 
ValueReference     : 

ChangeType         : Rename
LineNumber         : 5
LinePosition       : 8
Severity           : High
Cmdlet             : Existing : Get-HPBIOSAdvancedMemoryProtection; New : Get-HPEBIOSAdvancedMemoryProtection
Parameter          : 
ParameterReference : 
Property           : 
PropertyReference  : 
Value              : {Mirrored Memory with Advanced ECC Support}
ValueReference     : {Mirrored Memory with Advanced ECC Support}



C:\PS&gt; $d[1].ValueReference

LineNumber LinePosition Name                                     
---------- ------------ ----                                     
         7           38 Mirrored Memory with Advanced ECC Support



C:\PS&gt; $d[1].Value

ExistingValue                             NewValue                        
-------------                             --------                        
Mirrored Memory with Advanced ECC Support MirroredMemoryAdvancedECCSupport
</dev:code>
				<dev:remarks>
					<maml:para>above example shows the Value and ValueReference for the migration changes.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>EXAMPLE 3</maml:title>
				<maml:introduction>
					<maml:para />
				</maml:introduction>
				<dev:code>PS C:\&gt; $returnObject = Invoke-HPECmdletMigration -ScriptFile C:\powerTest.ps1 -CmdletModule HPBIOSCmdlets

PS C:\&gt; $returnObject 


ChangeType         : Rename
LineNumber         : 7
LinePosition       : 30
Severity           : High
Cmdlet             : Existing : Set-HPBIOSPowerprofile; New : Set-HPEBIOSPowerProfile
Parameter          : {HPPowerProfile}
ParameterReference : {HPPowerProfile}
Property           : {StatusType}
PropertyReference  : {StatusType}
Value              : {Balanced}
ValueReference     : {Balanced}

ChangeType         : Rename
LineNumber         : 24
LinePosition       : 30
Severity           : High
Cmdlet             : Existing : Set-HPBIOSPowerProfile; New : Set-HPEBIOSPowerProfile
Parameter          : {HPPowerProfile}
ParameterReference : {hpPowerprofile}
Property           : 
PropertyReference  : 
Value              : {Balanced, Maximum_Performance}
ValueReference     : {balanced, maximum_Performance}

ChangeType         : Rename
LineNumber         : 30
LinePosition       : 2
Severity           : High
Cmdlet             : Existing : Set-HPBIOSPowerProfile; New : Set-HPEBIOSPowerProfile
Parameter          : {hppowerprofile}
ParameterReference : {hppowerprofile}
Property           : 
PropertyReference  : 
Value              : {balanced}
ValueReference     : {balanced}



PS C:\&gt; $returnObject [0].Parameter

ExistingName   NewName     
------------   -------     
HPPowerProfile PowerProfile



PS C:\&gt; $returnObject [0].ParameterReference

LineNumber LinePosition Name          
---------- ------------ ----          
         2           24 HPPowerProfile



PS C:\&gt; $returnObject [0].Value

ExistingValue NewValue                   
------------- --------                   
Balanced      BalancedPowerAndPerformance



PS C:\&gt; $returnObject [0].ValueReference

LineNumber LinePosition Name    
---------- ------------ ----    
         2           40 Balanced</dev:code>
				<dev:remarks>
					<maml:para>Above example shows migration changes for Cmdlet,Parameter,Property, and Value with reference for the items in the script file.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>EXAMPLE 4</maml:title>
				<maml:introduction>
					<maml:para />
				</maml:introduction>
				<dev:code>PS C:\&gt; $returnObject = Invoke-HPECmdletMigration -ScriptFile .\Classify.ps1 -CmdletModule HPBIOSCmdlets

PS C:\&gt; $returnObject 


ChangeType         : Classify
LineNumber         : 1
LinePosition       : 1
Severity           : High
Cmdlet             : Existing : Set-HPBIOSServerAvailability; New : Set-HPEBIOSThermalOption
Parameter          : {ThermalShutdown}
ParameterReference : 
Property           : 
PropertyReference  : 
Value              : 
ValueReference     : 

</dev:code>
				<dev:remarks>
					<maml:para>Above example shows the ChangeType 'Classify'. In this case, Parameter 'ThermalShutdwon' has been moved from Set-HPBIOSServerAvailability to Set-HPEBIOSThermalOption. In such cases Parameter/Property reference will not be availiable.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>EXAMPLE 5</maml:title>
				<maml:introduction>
					<maml:para />
				</maml:introduction>
				<dev:code>PS C:\&gt; $returnObject = Invoke-HPECmdletMigration -ScriptFile C:\powerTest.ps1 -CmdletModule HPBIOSCmdlets

PS C:\&gt; $returnObject[0]


ChangeType         : Rename
LineNumber         : 7
LinePosition       : 30
Severity           : High
Cmdlet             : Existing : Set-HPBIOSPowerprofile; New : Set-HPEBIOSPowerProfile
Parameter          : {HPPowerProfile}
ParameterReference : {HPPowerProfile}
Property           : {StatusType}
PropertyReference  : {StatusType}
Value              : {Balanced}
ValueReference     : {Balanced}




PS C:\&gt; $returnObject[0].GetAdditionalMigrationInfo()

ChangeItem Existing            New                        
---------- --------            ---                        
 Parameter HPPowerProfile      PowerProfile               
     Value Balanced            BalancedPowerAndPerformance
     Value Maximum Performance MaximumPerformance         
     Value Maximum_Performance MaximumPerformance         
     Value Minimum Power       MinimumPowerUsage          
     Value Minimum_Power       MinimumPowerUsage          
  Property StatusType          Status                     
  Property StatusMessage       StatusInfo                 
</dev:code>
				<dev:remarks>
					<maml:para>Above example shows the migration suggestion for the Set-HPBIOSPowerProfile. GetAdditionalMigrationInfo() return all the migration changes for the Cmdlet Set-HPBIOSPowerProfile.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<!--Generated by: SAPIEN PowerShell HelpWriter 2017 v2.1.34-->
</helpItems>